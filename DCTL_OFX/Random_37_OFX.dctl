// Random 37 OFX DCTL

DEFINE_UI_PARAMS(TIME, Engage, DCTLUI_SLIDER_FLOAT, 0, 0, 1, 0.001)
DEFINE_UI_PARAMS(SCALE, Zoom, DCTLUI_SLIDER_FLOAT, 1, 0, 2, 0.001)
DEFINE_UI_PARAMS(msX, Horizontal, DCTLUI_SLIDER_FLOAT, 0, -1, 1, 0.001)
DEFINE_UI_PARAMS(msY, Vertical, DCTLUI_SLIDER_FLOAT, 0, -1, 1, 0.001)

#include "DCTL_Functions.h"

__DEVICE__ float Cell( float2 c)
{
float2 uv = fract(c);
c = c - uv;
return (1 - length(uv * 2 - 1)) * step(fract(_sinf(c.x + c.y * 1e2) * 1e3), 0.04f);
}

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
float X = (float)p_X;
float Y = (float)p_Y;
float width = (float)p_Width;
float height = (float)p_Height;
Y = height - Y;
float2 resolution = make_float2(width, height);
float2 XY = make_float2(X, Y);
float time = TIME * 10;

float2 p = XY / resolution - 0.5f;
p.x -= msX;
p.y -= msY;
p = p / (SCALE + 0.2f);

float a = fract(_atan2f(p.x, p.y) / TWO_PI);
float d = length(p);
float z = time / 1.5f;
float col[3];

for(int i = 0; i < 3 ; i++)
{
z += 0.02f;
float2 coord = make_float2(_powf(d, 0.04f), a) * 256;
float2 delta = make_float2(1 + z * 20, 1);
float c = Cell(coord - delta);
c += Cell(coord - delta);
col[i]=c*d*3.;
}    

return make_float3(col[0], col[1], col[2]);
}